{"version":3,"sources":["scripts/main.js"],"names":["doc","document","querySelector","isClicked","pushNotification","posTop","posRight","title","description","type","body","notifification","createElement","h2","dataset","qa","append","textContent","className","p","style","top","right","firstPromise","Promise","resolve","reject","addEventListener","event","button","setTimeout","Error","then","res","catch","secondPromise","waitForClick","buttonNumber","leftClick","rigthClick"],"mappings":";AAAA,aAEA,IAAMA,EAAMC,SAASC,cAAc,QAEnCF,EAAIG,WAAY,EAEhB,IAAMC,EAAmB,SAACC,EAAQC,EAAUC,EAAOC,EAAaC,GACxDC,IAAAA,EAAOT,SAASC,cAAc,QAE9BS,EAAiBV,SAASW,cAAc,OACxCC,EAAKZ,SAASW,cAAc,MAElCD,EAAeG,QAAQC,GAAK,eAC5BJ,EAAeK,OAAOH,GACtBA,EAAGI,YAAcV,EACjBM,EAAGK,UAAY,QAETC,IAAAA,EAAIlB,SAASW,cAAc,KAEjCO,EAAEF,YAAcT,EAChBG,EAAeK,OAAOG,GACtBR,EAAeS,MAAMC,IAAMhB,EAAS,KACpCM,EAAeS,MAAME,MAAQhB,EAAW,KACxCK,EAAeG,QAAQC,GAAK,eAE5BJ,EAAeO,UAA8BT,kBAAAA,OAAAA,GAE7CC,EAAKM,OAAOL,IAGRY,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzC1B,EAAI2B,iBAAiB,cAAe,WAC9BC,GAAiB,IAAjBA,MAAMC,OAGDJ,OAFPzB,EAAIG,WAAY,EAETsB,EAAQ,gCAInBK,WAAW,WACL9B,IAAkB,IAAlBA,EAAIG,UACCuB,OAAAA,EAAO,IAAIK,MAAM,gCAEzB,OAGLR,EAAaS,KAAK,SAACC,GAAQ7B,OAAAA,EAAiB,GAAI,GAAI6B,EAClD,wEACsD,aACrDC,MAAM,SAACD,GAAQ7B,OAAAA,EAAiB,GAAI,GAAI6B,EACvC,wEACoD,WAExD,IAAME,EAAgB,IAAIX,QAAQ,SAACC,EAASC,GAC1C1B,EAAI2B,iBAAiB,cAAe,WAC3BF,OAAAA,EAAQ,mCAQnB,SAASW,EAAaC,GACb,OAAA,IAAIb,QAAQ,SAAAC,GACjBzB,EAAI2B,iBAAiB,cAAe,WAC9BC,MAAMC,SAAWQ,GACnBZ,EAAQ,kCARhBU,EAAcH,KAAK,SAACC,GAAQ7B,OAAAA,EAAiB,IAAK,GAAI6B,EACpD,wEACwD,aAY1D,IAAMK,EAAYF,EAAa,GACzBG,EAAaH,EAAa,GAEhCE,EAAUN,KAAK,WAAMO,OAAAA,IAClBP,KAAK,SAACC,GAAQ7B,OAAAA,EAAiB,GAAI,IAAK6B,EACvC,wEACsD","file":"main.2f2a3e8f.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst doc = document.querySelector('html');\n\ndoc.isClicked = false;\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const body = document.querySelector('body');\n\n  const notifification = document.createElement('div');\n  const h2 = document.createElement('h2');\n\n  notifification.dataset.qa = 'notification';\n  notifification.append(h2);\n  h2.textContent = title;\n  h2.className = 'title';\n\n  const p = document.createElement('p');\n\n  p.textContent = description;\n  notifification.append(p);\n  notifification.style.top = posTop + 'px';\n  notifification.style.right = posRight + 'px';\n  notifification.dataset.qa = 'notification';\n\n  notifification.className = `notification + ${type}`;\n\n  body.append(notifification);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  doc.addEventListener('pointerdown', () => {\n    if (event.button === 0) {\n      doc.isClicked = true;\n\n      return resolve('First promise was resolved');\n    }\n  });\n\n  setTimeout(() => {\n    if (doc.isClicked === false) {\n      return reject(new Error('First promise was rejected'));\n    }\n  }, 3000);\n});\n\nfirstPromise.then((res) => pushNotification(30, 20, res,\n  'Message example.\\n '\n+ 'Notification should contain title and description.', 'success'))\n  .catch((res) => pushNotification(30, 20, res,\n    'Message example.\\n '\n+ 'Notification should contain title and description.', 'error'));\n\nconst secondPromise = new Promise((resolve, reject) => {\n  doc.addEventListener('pointerdown', () => {\n    return resolve('Second promise was resolved');\n  });\n});\n\nsecondPromise.then((res) => pushNotification(180, 20, res,\n  'Message example.\\n '\n  + 'Notification should contain title and description.', 'success'));\n\nfunction waitForClick(buttonNumber) {\n  return new Promise(resolve => {\n    doc.addEventListener('pointerdown', () => {\n      if (event.button === buttonNumber) {\n        resolve('Third promise was resolved');\n      }\n    });\n  });\n}\n\nconst leftClick = waitForClick(0);\nconst rigthClick = waitForClick(2);\n\nleftClick.then(() => rigthClick)\n  .then((res) => pushNotification(30, 340, res,\n    'Message example.\\n '\n  + 'Notification should contain title and description.', 'success'));\n"]}